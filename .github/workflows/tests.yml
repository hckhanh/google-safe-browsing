name: Tests

on:
  workflow_call:
  pull_request:
    branches:
      - main

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@ac5bf11548bf5e19b8aadb8182072616590fa4a6
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Prettier check
        run: pnpm test:prettier
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: pnpm npm audit signatures
      - name: Verify the package for publishing performing all checks and validations
        run: pnpm dlx jsr publish --dry-run
  node:
    name: Node
    needs: lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20, 21]
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@ac5bf11548bf5e19b8aadb8182072616590fa4a6
      - name: Set up Node.js ${{matrix.node}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node}}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run unit tests
        run: pnpm test -- --environment=node
        env:
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_SAFE_BROWSING_API_KEY }}
  edge:
    name: Edge Runtime
    needs: lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@ac5bf11548bf5e19b8aadb8182072616590fa4a6
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run unit tests
        run: pnpm test -- --environment=edge-runtime
        env:
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_SAFE_BROWSING_API_KEY }}
  coverage:
    name: Coverage
    needs: [node, edge]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@ac5bf11548bf5e19b8aadb8182072616590fa4a6
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run unit tests
        run: pnpm test -- --coverage.enabled
        env:
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_SAFE_BROWSING_API_KEY }}
          TEST_ANALYTICS: 1
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a
        if: ${{ github.actor != 'renovate[bot]' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ github.actor != 'renovate[bot]' && !cancelled() }}
        uses: codecov/test-results-action@9739113ad922ea0a9abb4b2c0f8bf6a4aa8ef820
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: 'coverage/junit.xml'
  deno:
    name: Deno
    needs: lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Deno
        uses: denoland/setup-deno@1c4873e05d8d88a39d049245691fc43056ef5969
      - name: Type-check the dependencies
        run: deno check src/index.ts
